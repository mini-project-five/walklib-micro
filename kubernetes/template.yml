---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management
  labels:
    app: user-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-management
  template:
    metadata:
      labels:
        app: user-management
    spec:
      containers:
        - name: user-management
          image: chldlsrb1000/user-m:local
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: point-management
  labels:
    app: point-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: point-management
  template:
    metadata:
      labels:
        app: point-management
    spec:
      containers:
        - name: point-management
          image: chldlsrb1000/point-m:local
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscription-management
  labels:
    app: subscription-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: subscription-management
  template:
    metadata:
      labels:
        app: subscription-management
    spec:
      containers:
        - name: subscription-management
          image: chldlsrb1000/subs-m:local
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: book-management
  labels:
    app: book-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: book-management
  template:
    metadata:
      labels:
        app: book-management
    spec:
      containers:
        - name: book-management
          image: chldlsrb1000/book-m:local
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: author-management
  labels:
    app: author-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: author-management
  template:
    metadata:
      labels:
        app: author-management
    spec:
      containers:
        - name: author-management
          image: chldlsrb1000/author-m:local
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: content-writing-management
  labels:
    app: content-writing-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: content-writing-management
  template:
    metadata:
      labels:
        app: content-writing-management
    spec:
      containers:
        - name: content-writing-management
          image: chldlsrb1000/content-m:local
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-system-management
  labels:
    app: ai-system-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-system-management
  template:
    metadata:
      labels:
        app: ai-system-management
    spec:
      containers:
        - name: ai-system-management
          image: chldlsrb1000/ai-m:local
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: chldlsrb1000/gateway:local
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/'  # 또는 /actuator/health, 엔드포인트에 맞게 수정
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:latest
          ports:
            - containerPort: 29092
          env:
            - name: KAFKA_NODE_ID
              value: "1"
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@kafka:29093"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:29092"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: CLUSTER_ID
              value: "ciWo7IWazngRchmPES6q5A=="
            - name: KAFKA_LOG_DIRS
              value: "/tmp/kraft-combined-logs"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  labels:
    app: kafka-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
        - name: kafka-ui
          image: provectuslabs/kafka-ui:latest
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_CLUSTERS_0_NAME
              value: "local"
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              value: "kafka:9092"


---


apiVersion: v1
kind: Service
metadata:
  name: user-management
  labels:
    app: user-management
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: user-management


---


apiVersion: v1
kind: Service
metadata:
  name: point-management
  labels:
    app: point-management
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: point-management


---


apiVersion: v1
kind: Service
metadata:
  name: subscription-management
  labels:
    app: subscription-management
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: subscription-management


---


apiVersion: v1
kind: Service
metadata:
  name: book-management
  labels:
    app: book-management
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: book-management


---


apiVersion: v1
kind: Service
metadata:
  name: author-management
  labels:
    app: author-management
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: author-management


---


apiVersion: v1
kind: Service
metadata:
  name: content-writing-management
  labels:
    app: content-writing-management
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: content-writing-management


---


apiVersion: v1
kind: Service
metadata:
  name: ai-system-management
  labels:
    app: ai-system-management
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: ai-system-management

