server:
  port: 8080

spring:
  application:
    name: ai system management
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: ai system management
          destination: publicationRequested # 기존 miniproject에서 변경
          contentType: application/json
        event-out:
          destination: aiProcessedEvents # 기존 miniproject에서 변경
          contentType: application/json

# --- AI Service Configuration for default profile ---
external:
  ai:
    service:
      # OpenAI 이미지 생성 API 엔드포인트 URL
      # DALL-E 3 모델을 사용한다면 /images/generations을 호출하게 됩니다.
      url: https://api.openai.com/v1 # 이 URL을 정확히 입력해야 합니다.

ai:
  api:
    # API 키를 환경 변수에서 가져옵니다.
    # 우선 AI_SERVICE_API_KEY를 찾고, 없으면 VITE_CHAT_API_KEY를 찾습니다.
    # 둘 다 없으면 "dummy_api_key"를 사용하므로, 반드시 환경 변수를 설정해야 합니다.
    key: ${AI_SERVICE_API_KEY:${VITE_CHAT_API_KEY:dummy_api_key}}

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8088 # 이 포트가 활성화될 경우 8080 대신 8088로 서비스가 실행됩니다. 의도 확인 필요.

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: ai system management
          destination: publicationRequested # 기존 miniproject에서 변경
          contentType: application/json
        event-out:
          destination: aiProcessedEvents # 기존 miniproject에서 변경
          contentType: application/json

# --- AI Service Configuration for docker profile ---
external:
  ai:
    service:
      url: https://api.openai.com/v1 # 실제 AI 서비스 URL로 변경하세요 (운영 환경용)

ai:
  api:
    key: ${VITE_CHAT_API_KEY:${AI_SERVICE_API_KEY:dummy_api_key}} # 운영 환경에서도 환경 변수 사용