server:
  port: 8080

---

spring:
  profiles: default
  cloud:
    gateway:
      default-filters:
        - name: RequestSize
          args:
            maxSize: 5000000  # 5MB
#<<< API Gateway / Routes
      routes:
        - id: user-management-auth
          uri: http://localhost:8082
          predicates:
            - Path=/users/auth/**
          filters:
            - RewritePath=/users/auth/(?<segment>.*), /auth/$\{segment}
        - id: user-management
          uri: http://localhost:8082
          predicates:
            - Path=/users/**, /auth/** 
        - id: point-management
          uri: http://localhost:8083
          predicates:
            - Path=/points/**, /pointLists/**
        - id: subscription-management
          uri: http://localhost:8084
          predicates:
            - Path=/subscriptions/**, 
        - id: book-management
          uri: http://localhost:8085
          predicates:
            - Path=/books/**, /bookLists/**
        - id: author-management
          uri: http://localhost:8086
          predicates:
            - Path=/authors/**, /authorManagements/**, /authorManagementViews/**
        - id: content-writing-management
          uri: http://localhost:8087
          predicates:
            - Path=/manuscripts/**, /manuscriptLists/**
        - id: ai-system-management
          uri: http://localhost:8089
          predicates:
            - Path=/ais/**
        - id: frontend
          uri: http://localhost:8080
          predicates:
            - Path=/**
#>>> API Gateway / Routes


---

spring:
  profiles: docker
  cloud:
    gateway:
      routes:
        - id: user-management
          uri: http://user-management:8080
          predicates:
            - Path=/users/**, 
        - id: point-management
          uri: http://point-management:8080
          predicates:
            - Path=/points/**, 
        - id: subscription-management
          uri: http://subscription-management:8080
          predicates:
            - Path=/subscriptions/**, 
        - id: book-management
          uri: http://book-management:8080
          predicates:
            - Path=/books/**, 
        - id: author-management
          uri: http://author-management:8080
          predicates:
            - Path=/authors/**, /authorManagements/**, 
        - id: content-writing-management
          uri: http://content-writing-management:8080
          predicates:
            - Path=/manuscripts/**, 
        - id: ai-system-management
          uri: http://ai-system-management:8080
          predicates:
            - Path=/ais/**, 
        - id: frontend
          uri: http://frontend:8080
          predicates:
            - Path=/**
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"
              - "http://localhost:3001"
            allowedMethods:
              - "GET"
              - "POST"
              - "PUT"
              - "DELETE"
              - "OPTIONS"
            allowedHeaders:
              - "Content-Type"
              - "Authorization"
              - "X-Requested-With"
              - "Accept"
            allowCredentials: false

server:
  port: 8080
