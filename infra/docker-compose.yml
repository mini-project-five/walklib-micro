# https://adjh54.tistory.com/637 참고

services:
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:29092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: 'ciWo7IWazngRchmPES6q5A=='
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8092:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka

  # Microservices
  user:
    build:
      context: ../user
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  point:
    build:
      context: ../point
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  subscription:
    build:
      context: ../subscription
      dockerfile: Dockerfile
    ports:
      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  book:
    build:
      context: ../book
      dockerfile: Dockerfile
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  author:
    build:
      context: ../author
      dockerfile: Dockerfile
    ports:
      - "8086:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  content:
    build:
      context: ../content
      dockerfile: Dockerfile
    ports:
      - "8087:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  ai:
    build:
      context: ../ai
      dockerfile: Dockerfile
    ports:
      - "8089:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped

  gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    ports:
      - "8088:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - user
      - point
      - subscription
      - book
      - author
      - content
      - ai
      - kafka
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - gateway
    restart: unless-stopped%                  