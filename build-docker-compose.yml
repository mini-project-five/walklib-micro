version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: my-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://my-kafka:29092,PLAINTEXT_HOST://my-kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  user_management:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    container_name: walklib_user_management
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8081:8080
    working_dir: /usr/src
    volumes:
      - ./user_management:/usr/src
      - ./maven-repo:/root/.m2
      
  point_management:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    container_name: walklib_point_management
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8085:8080
    working_dir: /usr/src
    volumes:
      - ./point_management:/usr/src
      - ./maven-repo:/root/.m2
      
  subscription_management:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    container_name: walklib_subscription_management
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8086:8080
    working_dir: /usr/src
    volumes:
      - ./subscription_management:/usr/src
      - ./maven-repo:/root/.m2
      
  book_management:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    container_name: walklib_book_management
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8083:8080
    working_dir: /usr/src
    volumes:
      - ./book_management:/usr/src
      - ./maven-repo:/root/.m2
      
  author_management:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    container_name: walklib_author_management
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8082:8080
    working_dir: /usr/src
    volumes:
      - ./author_management:/usr/src
      - ./maven-repo:/root/.m2
      
  content_writing_management:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    container_name: walklib_content_writing_management
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8084:8080
    working_dir: /usr/src
    volumes:
      - ./content_writing_management:/usr/src
      - ./maven-repo:/root/.m2
      
  ai_system_management:
    depends_on: 
      - kafka
    image: adoptopenjdk/maven-openjdk11:latest
    container_name: walklib_ai_system_management
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8087:8080
    working_dir: /usr/src
    volumes:
      - ./ai_system_management:/usr/src
      - ./maven-repo:/root/.m2
      
  gateway:
    depends_on: 
      - user_management
      - point_management
      - subscription_management
      - book_management
      - author_management
      - content_writing_management
      - ai_system_management
    image: adoptopenjdk/maven-openjdk11:latest
    container_name: walklib_gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: >
      bash -c "
        ./scripts/wait-for-services.sh \
          walklib_user_management:8080 \
          walklib_point_management:8080 \
          walklib_subscription_management:8080 \
          walklib_book_management:8080 \
          walklib_author_management:8080 \
          walklib_content_writing_management:8080 \
          walklib_ai_system_management:8080 &&
        mvn spring-boot:run
      "
    ports:
      - 8080:8080
    working_dir: /usr/src
    volumes:
      - .:/usr/src
      - ./maven-repo:/root/.m2
      
  frontend:
    depends_on: 
      - gateway
    image: node:18-alpine
    container_name: walklib_frontend
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - 3000:5173
    working_dir: /usr/src
    volumes:
      - ./frontend:/usr/src
    environment:
      - VITE_API_BASE_URL=http://localhost:8080
