version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: walklib_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: walklib_kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-management:
    build: 
      context: ./user_management
      dockerfile: Dockerfile
    container_name: walklib_user_management
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  point-management:
    build: 
      context: ./point_management
      dockerfile: Dockerfile
    container_name: walklib_point_management
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  subscription-management:
    build: 
      context: ./subscription_management
      dockerfile: Dockerfile
    container_name: walklib_subscription_management
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  book-management:
    build: 
      context: ./book_management
      dockerfile: Dockerfile
    container_name: walklib_book_management
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  author-management:
    build: 
      context: ./author_management
      dockerfile: Dockerfile
    container_name: walklib_author_management
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8086:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  content-writing-management:
    build: 
      context: ./content_writing_management
      dockerfile: Dockerfile
    container_name: walklib_content_writing_management
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8087:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  ai-system-management:
    build: 
      context: ./ai_system_management
      dockerfile: Dockerfile
    container_name: walklib_ai_system_management
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8089:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - OPENAI_API_KEY=${OPENAI_API_KEY:-sk-your-api-key-here}
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  auth-management:
    build: 
      context: ./auth_management
      dockerfile: Dockerfile
    container_name: walklib_auth_management
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8090:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  gateway:
    build: 
      context: ./gateway
      dockerfile: Dockerfile
    container_name: walklib_gateway
    depends_on:
      user-management:
        condition: service_healthy
      point-management:
        condition: service_healthy
      subscription-management:
        condition: service_healthy
      book-management:
        condition: service_healthy
      author-management:
        condition: service_healthy
      content-writing-management:
        condition: service_healthy
      ai-system-management:
        condition: service_healthy
      auth-management:
        condition: service_healthy
    ports:
      - "8088:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - walklib-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: walklib_frontend
    depends_on:
      gateway:
        condition: service_healthy
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:8088
    networks:
      - walklib-network
    restart: unless-stopped

networks:
  walklib-network:
    driver: bridge
    name: walklib-network

volumes:
  kafka-data:
  zookeeper-data: